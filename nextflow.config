manifest {
    mainScript = 'main.nf'
    nextflowVersion = '>=20.00.0'
}

params{
    max_cores = Runtime.runtime.availableProcessors()
    cores = Runtime.runtime.availableProcessors().intdiv(4)
    memory = '12'
    outdir = "results"
    help = false
    profile = 'slurm'
    adapters = "${projectDir}/assets/illumina_adapter.fa"
    trimming_tool = "fastp" // Options: 'fastp', 'flexbar', 'trim_galore'
    quality = "30"
    kraken2_db = "/mmfs1/scratch/jacks.local/naveen.duhan/reference_datbases/kraken2_db"
    min_contig_length = 200
    assembler= "hybrid" // Options: 'metaspades', 'megahit', 'hybrid'

    // Specify multiple BLAST databases to run (default: all)
    blast_options = ['all'] // Options: 'all', 'viruses', 'nt', 'nr'
    blastdb_viruses = "/mmfs1/scratch/jacks.local/naveen.duhan/reference_datbases/ncbi_dbs/nt_viruses/nt_viruses"
    blastdb_nt = "/mmfs1/scratch/jacks.local/naveen.duhan/reference_datbases/ncbi_dbs/nt/nt"
    blastdb_nr = "/mmfs1/scratch/jacks.local/naveen.duhan/reference_datbases/ncbi_dbs/nr/nr"
    diamonddb = "/mmfs1/scratch/jacks.local/naveen.duhan/reference_datbases/diamond_db/nr.dmnd"

    // CheckV database path (required for viral analysis)
    checkv_db = "/mmfs1/scratch/jacks.local/naveen.duhan/reference_datbases/checkv_db"

    // VIGA and VirFinder should be installed and available in $PATH
    // No additional params required unless you want to add custom options

    // fastp tool requirements:
    // - fastp (for trimming)
    // - You can add fastp-specific parameters here if needed
    // Example: fastp_extra = "--qualified_quality_phred 20 --length_required 50"

    // Visualization tool requirements:
    // - samtools (for BAM/coverage)
    // - python3 with matplotlib and seaborn
    // - FastTree (for phylogeny)
    // - R (for VirFinder)
}

// Default configuration (applies to all profiles)
process {
    errorStrategy = 'retry'   // Retry failed jobs
    maxRetries = 3            // Number of retries
    maxForks = 10             // Limit number of parallel jobs
}

// Local profile
profiles {
    local {
        process.executor = 'local'  // Use the local executor
        executor {
            name = 'local'
            cpus = params.max_cores
        }
       includeConfig 'nextflow/configs/local.config'
    }

    slurm {
        process.executor = 'slurm'  // Use SLURM executor
        executor {
            name = 'slurm'
            queueSize = 100         // Maximum number of jobs in the queue
        }
        process {
            queue = params.queue ?: 'compute'         // SLURM queue/partition
            cpus = 40               // Default to 40 CPUs per job
            time = '12h'            // Default time limit of 72 hours
            memory = '250GB'
        }
        
        includeConfig 'nextflow/configs/slurm.config'
    }

    conda {
        process.conda = true
        process.condaFile = "${projectDir}/environment.yml"
    }

    docker {
        process.container = 'metanextviro:latest'
        docker.enabled = true
        docker.runOptions = '-u \\$(id -u):\\$(id -g)'
    }

    singularity {
        singularity.enabled = true
        process.container = 'docker://metanextviro:latest'
    }
}
