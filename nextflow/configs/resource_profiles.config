/*
 * Resource Profile Configurations
 * Defines different resource allocation strategies for various environments
 */

// Resource profiles for different execution environments
profiles {
    
    // Minimal resource profile for testing
    test {
        params {
            max_cpus = 2
            max_memory = '4.GB'
            max_time = '1.h'
            max_forks = 2
            max_retry_scaling = 1
        }
        
        process {
            withLabel: 'process_low' {
                cpus = 1
                memory = '2.GB'
                time = '30.m'
            }
            withLabel: 'process_medium' {
                cpus = 1
                memory = '2.GB'
                time = '30.m'
            }
            withLabel: 'process_high' {
                cpus = 2
                memory = '4.GB'
                time = '1.h'
            }
            withLabel: 'process_memory_intensive' {
                cpus = 2
                memory = '4.GB'
                time = '1.h'
            }
        }
    }
    
    // Small workstation profile
    small {
        params {
            max_cpus = 4
            max_memory = '16.GB'
            max_time = '12.h'
            max_forks = 2
            max_retry_scaling = 2
        }
        
        process {
            withLabel: 'process_low' {
                cpus = { check_max(1 * task.attempt, 2) }
                memory = { check_max(2.GB * task.attempt, '4.GB') }
                time = { check_max(1.h * task.attempt, '2.h') }
            }
            withLabel: 'process_medium' {
                cpus = { check_max(2 * task.attempt, 3) }
                memory = { check_max(4.GB * task.attempt, '8.GB') }
                time = { check_max(2.h * task.attempt, '4.h') }
            }
            withLabel: 'process_high' {
                cpus = { check_max(3 * task.attempt, 4) }
                memory = { check_max(8.GB * task.attempt, '16.GB') }
                time = { check_max(4.h * task.attempt, '8.h') }
            }
            withLabel: 'process_memory_intensive' {
                cpus = { check_max(2 * task.attempt, 4) }
                memory = { check_max(12.GB * task.attempt, '16.GB') }
                time = { check_max(6.h * task.attempt, '12.h') }
            }
        }
    }
    
    // Medium workstation profile
    medium {
        params {
            max_cpus = 16
            max_memory = '64.GB'
            max_time = '24.h'
            max_forks = 4
            max_retry_scaling = 2
        }
        
        process {
            withLabel: 'process_low' {
                cpus = { check_max(2 * task.attempt, 4) }
                memory = { check_max(4.GB * task.attempt, '8.GB') }
                time = { check_max(1.h * task.attempt, '4.h') }
            }
            withLabel: 'process_medium' {
                cpus = { check_max(4 * task.attempt, 8) }
                memory = { check_max(8.GB * task.attempt, '16.GB') }
                time = { check_max(2.h * task.attempt, '8.h') }
            }
            withLabel: 'process_high' {
                cpus = { check_max(8 * task.attempt, 12) }
                memory = { check_max(16.GB * task.attempt, '32.GB') }
                time = { check_max(4.h * task.attempt, '12.h') }
            }
            withLabel: 'process_memory_intensive' {
                cpus = { check_max(6 * task.attempt, 12) }
                memory = { check_max(32.GB * task.attempt, '64.GB') }
                time = { check_max(8.h * task.attempt, '24.h') }
            }
        }
    }
    
    // Large HPC profile
    large_hpc {
        params {
            max_cpus = 128
            max_memory = '1000.GB'
            max_time = '72.h'
            max_forks = 20
            max_retry_scaling = 3
        }
        
        process {
            withLabel: 'process_low' {
                cpus = { check_max(4 * task.attempt, 8) }
                memory = { check_max(8.GB * task.attempt, '32.GB') }
                time = { check_max(2.h * task.attempt, '8.h') }
            }
            withLabel: 'process_medium' {
                cpus = { check_max(8 * task.attempt, 16) }
                memory = { check_max(16.GB * task.attempt, '64.GB') }
                time = { check_max(4.h * task.attempt, '12.h') }
            }
            withLabel: 'process_high' {
                cpus = { check_max(16 * task.attempt, 32) }
                memory = { check_max(32.GB * task.attempt, '128.GB') }
                time = { check_max(8.h * task.attempt, '24.h') }
            }
            withLabel: 'process_memory_intensive' {
                cpus = { check_max(16 * task.attempt, 32) }
                memory = { check_max(128.GB * task.attempt, '1000.GB') }
                time = { check_max(12.h * task.attempt, '72.h') }
            }
        }
    }
    
    // GPU-enabled profile
    gpu_enabled {
        params {
            max_cpus = 32
            max_memory = '256.GB'
            max_time = '48.h'
            max_forks = 8
            max_retry_scaling = 2
        }
        
        process {
            withLabel: 'process_gpu' {
                cpus = { check_max(8 * task.attempt, 16) }
                memory = { check_max(32.GB * task.attempt, '128.GB') }
                time = { check_max(8.h * task.attempt, '24.h') }
                accelerator = 1
                clusterOptions = '--gres=gpu:1'
            }
        }
    }
}